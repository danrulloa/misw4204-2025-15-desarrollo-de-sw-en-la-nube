user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events { worker_connections 4096; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # DNS interno de Docker
  resolver 127.0.0.11 ipv6=off valid=30s;

  # Subidas y timeouts
  client_max_body_size 100m;
  client_body_timeout 600s;

  # Usar el path de convenci칩n (y que existe gracias al tmpfs)
  client_body_temp_path /var/cache/nginx/client_temp;

  proxy_request_buffering on;
  proxy_connect_timeout 60s;
  proxy_read_timeout    600s;
  proxy_send_timeout    600s;

  sendfile on;
  keepalive_timeout 65;

  # Upstreams (IPs din치micas del aprovisionamiento)
  upstream api_upstream   { server ${CORE_IP}:8000;        keepalive 32; }
  upstream auth_upstream  { server ${CORE_IP}:8001; keepalive 16; }
  upstream rmq_mgmt_upstream { server ${MQ_IP}:15672; keepalive 8; }
  upstream grafana_upstream { server ${OBS_IP}:3000; keepalive 8; }

  server {
    listen 80;
    server_name _;

    # Salud del gateway
    location = /nginx-health {
      return 200 "ok";
      add_header Content-Type text/plain;
    }
    location = /nginx_status {
      stub_status;
      access_log off;
    }

    # API principal
    location /api/ {
      proxy_pass http://api_upstream/;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_buffering on;
      proxy_buffers 32 64k;
      proxy_busy_buffers_size 256k;
      proxy_next_upstream error timeout http_502 http_503 http_504;
    }

    location = /openapi.json {
    return 308 /api/openapi.json;
    }

    location = /docs/oauth2-redirect {
      return 308 /api/docs/oauth2-redirect;
    }

    # Servicio de autenticaci칩n
    location /auth/ {
      proxy_pass http://auth_upstream;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_buffering on;
      proxy_buffers 16 64k;
      proxy_busy_buffers_size 128k;
      proxy_next_upstream error timeout http_502 http_503 http_504;
    }

    location = /rabbitmq {
      return 301 /rabbitmq/;
    }

    location /rabbitmq/ {
      proxy_pass http://rmq_mgmt_upstream/;
      proxy_http_version 1.1;

      proxy_set_header Host                $host;
      proxy_set_header X-Forwarded-Host    $host;
      proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto   $scheme;
      proxy_set_header X-Forwarded-Prefix  /rabbitmq;

      proxy_set_header Upgrade   $http_upgrade;
      proxy_set_header Connection "upgrade";

      proxy_read_timeout 300s;
      proxy_send_timeout 300s;
      proxy_redirect off;
    }

    location = /grafana {
      return 301 /grafana/;
    }

    # Proxy real (nota: ^~ y headers)
    location ^~ /grafana/ {
      proxy_pass http://grafana_upstream;
      proxy_http_version 1.1;

      # Usa el Host EXACTO que envi칩 el cliente (incluye :8080)
      proxy_set_header Host              $http_host;
      proxy_set_header X-Forwarded-Host  $http_host;

      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Prefix /grafana;

      proxy_redirect off;

      proxy_read_timeout 300s;
      proxy_send_timeout 300s;

      proxy_set_header Upgrade    $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }
}
