user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    # Aumentar para poder manejar más conexiones concurrentes
    worker_connections  4096;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Límite máximo de tamaño de archivo:
    client_max_body_size 100m;  # permitido: 100 MB

    # Timeouts relacionados con la carga del cuerpo (client -> proxy)
    # Elegimos 600s (10 minutos) como valor por defecto razonable:
    # - Si el cliente sube a 1 Mbps, 100 MB (~800 Mb) tardaría ~800s (~13 min).
    # - 600s cubre conexiones moderadamente lentas (por ejemplo 1.5 Mbps ~ 600s)
    client_body_timeout 600s;

    # Directorio temporal donde Nginx bufferiza el cuerpo
    client_body_temp_path /var/tmp/nginx;

    # Habilitar buffering para que Nginx reciba y escriba a disco antes de pasar al backend
    proxy_request_buffering on;

    # Timeouts adicionales (proxy -> api)
    proxy_connect_timeout 60s;
    proxy_read_timeout 600s;
    proxy_send_timeout 600s;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  _;

        location / {
            # Proxy upstream - adjust host:port to your API service name and port
            proxy_pass http://api:8000;

            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_buffering on;
            # Buffers para manejar picos y latencia entre proxy y api
            proxy_buffers 32 64k;
            proxy_busy_buffers_size 256k;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
        }
    }
}
